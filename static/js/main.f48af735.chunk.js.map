{"version":3,"sources":["Todos.js","AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","todolist","length","map","todo","className","onClick","id","content","AddForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addTodo","console","log","onSubmit","this","type","onChange","Component","App","filter","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAuBeA,EArBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACbC,EAAWF,EAAMG,OACnBH,EAAMI,KAAI,SAAAC,GACN,OACE,qBAAKC,UAAU,kBAAf,SACI,sBAAMC,QAAS,WAAKN,EAAWI,EAAKG,KAApC,SAA2CH,EAAKI,WADdJ,EAAKG,OAOhD,mBAAGF,UAAU,SAAb,mDACL,OACI,qBAAKA,UAAY,mBAAjB,SACKJ,KCdPQ,E,4MACFC,MAAQ,CACJF,QAAS,I,EAEbG,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVL,QAASI,EAAEE,OAAOC,S,EAG1BC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKT,OACxBU,QAAQC,IAAI,EAAKX,OACjB,EAAKG,SAAS,CACVL,QAAQ,M,4CAGhB,WACI,OACI,8BACI,uBAAMc,SAAUC,KAAKP,aAArB,UACI,iDACA,uBAAOQ,KAAK,OAAOC,SAAUF,KAAKZ,aAAcI,MAAOQ,KAAKb,MAAMF,mB,GAtBhEkB,aA6BPjB,IC5BTkB,E,4MACJjB,MAAQ,CACRX,MAAO,CACH,CAACQ,GAAG,EAAGC,QAAS,eAChB,CAACD,GAAG,EAAGC,QAAS,sB,EAKpBR,WAAa,SAACO,GACZ,IAAMR,EAAQ,EAAKW,MAAMX,MAAM6B,QAAO,SAAAxB,GACpC,OAAOA,EAAKG,KAAMA,KAEpB,EAAKM,SAAS,CACZd,W,EAIJoB,QAAU,SAACf,GACTA,EAAKG,GAAKsB,KAAKC,SACf,IAAI/B,EAAK,sBAAO,EAAKW,MAAMX,OAAlB,CAAwBK,IACjC,EAAKS,SAAS,CACZd,W,4CAGF,WACM,OACE,sBAAKM,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,oBACA,cAAC,EAAD,CAAON,MAAOwB,KAAKb,MAAMX,MAAOC,WAAYuB,KAAKvB,aACjD,cAAC,EAAD,CAASmB,QAASI,KAAKJ,iB,GA9BnBO,aAmCHC,IC1BAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f48af735.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Todos = ({todos, deleteTodo}) => {\r\n    const todolist = todos.length ? (\r\n        todos.map(todo => {\r\n            return (\r\n              <div className=\"collection-item\" key={todo.id}>\r\n                  <span onClick={()=>{deleteTodo(todo.id)}}>{todo.content}</span>\r\n              </div>\r\n\r\n            )\r\n        })\r\n\r\n    ) : (<p className=\"center\"> You have no todos. Get back to work!</p>)\r\n    return (\r\n        <div className = \"todos collection\">\r\n            {todolist}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default Todos;","import React, { Component } from 'react'\r\n\r\nclass AddForm extends Component {\r\n    state = {\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        console.log(this.state);\r\n        this.setState({\r\n            content:''\r\n        })        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Add new todo</label>\r\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.content} />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddForm\r\n","import { Component } from \"react\";\nimport Todos  from './Todos'\nimport AddForm from \"./AddForm\";\nclass App extends Component{\n  state = {\n  todos: [\n      {id:1, content: 'study react'},\n      {id:2, content: 'study more react'}\n\n  ]\n  }\n\n  deleteTodo = (id) => {\n    const todos = this.state.todos.filter(todo=> {\n      return todo.id !==id\n    });\n    this.setState({\n      todos\n    })\n  }\n\n  addTodo = (todo) => {\n    todo.id = Math.random();\n    let todos = [...this.state.todos,todo]\n    this.setState({\n      todos\n    })\n  }\n    render(){\n          return (\n            <div className=\"todos container\">\n              <h1 className=\"center blue-text\">Todo's</h1>\n              <Todos todos={this.state.todos} deleteTodo={this.deleteTodo}/>\n              <AddForm addTodo={this.addTodo}/></div>\n          );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}